// Adds occupancy indicators to the Mk1-2 command pod.

@PART[Mark1-2Pod]:FOR[IndicatorLights] {

	// We have to re-specify the model for the stock part, because this is
	// an older part that uses the "mesh =" syntax in its .cfg file instead
	// of the newer "MODEL" syntax. The "mesh =" syntax doesn't allow having
	// multiple models as part of the same part, which would prevent this mod
	// from adding meshes for the indicator lights.
	MODEL
	{
		model = Squad/Parts/Command/Mk1-2Pod/model
	}

	//-------------------------------------------------------------------------
	// INDICATOR MESHES
	//-------------------------------------------------------------------------

	MODEL
	{
		model = IndicatorLights/Meshes/nubbinLamp
		scale = 0.6, 0.6, 0.5
		position = -0.2767, 0.79, 0.6846
		rotation = -20, -22, 0
	}

	MODEL
	{
		model = IndicatorLights/Meshes/nubbinLamp
		scale = 0.6, 0.6, 0.5
		position = -0.3580, 0.79, 0.6459
		rotation = -20, -29, 0
	}

	MODEL
	{
		model = IndicatorLights/Meshes/nubbinLamp
		scale = 0.6, 0.6, 0.5
		position = -0.4340, 0.79, 0.5974
		rotation = -20, -36, 0
	}

	//-------------------------------------------------------------------------
	// CONTROLLABLE EMISSIVES
	//-------------------------------------------------------------------------

	MODULE {
		name = ModuleControllableEmissive
		target = IndicatorLights/Meshes/nubbinLamp:0
		emissiveName = indicator0
	}

	MODULE {
		name = ModuleControllableEmissive
		target = IndicatorLights/Meshes/nubbinLamp:1
		emissiveName = indicator1
	}

	MODULE {
		name = ModuleControllableEmissive
		target = IndicatorLights/Meshes/nubbinLamp:2
		emissiveName = indicator2
	}

	//-------------------------------------------------------------------------
	// CONTROLLERS
	//-------------------------------------------------------------------------

	MODULE {
		name = ModuleCrewIndicatorToggle
		toggleName = indicatorToggle
	}
	
	MODULE {
		name = ModuleCrewIndicator
	    controllerName = crewController0
		toggleName = indicatorToggle
	}
	
	MODULE {
		name = ModuleCrewIndicator
	    controllerName = crewController1
		toggleName = indicatorToggle
	}
	
	MODULE {
		name = ModuleCrewIndicator
	    controllerName = crewController2
		toggleName = indicatorToggle
	}

    MODULE
    {
        name = ModuleScienceAvailabilityIndicator
		controllerName = availability0
        experimentID = crewReport
        lowValueColor = crewController0
        mediumValueColor = highValueColor
        highValueColor = blink(lowValueColor, 200, $Off, 200)
    }

    MODULE
    {
        name = ModuleScienceAvailabilityIndicator
		controllerName = availability1
        experimentID = crewReport
        lowValueColor = crewController1
        mediumValueColor = highValueColor
        highValueColor = blink(lowValueColor, 200, $Off, 200)
    }

    MODULE
    {
        name = ModuleScienceAvailabilityIndicator
		controllerName = availability2
        experimentID = crewReport
        lowValueColor = crewController2
        mediumValueColor = highValueColor
        highValueColor = blink(lowValueColor, 200, $Off, 200)
    }

	MODULE {
		name = ModuleScienceDataIndicator
        experimentID = crewReport
        emissiveName = indicator0
		dataColor = crewController0
		emptyColor = availability0
	}

	MODULE {
		name = ModuleScienceDataIndicator
        experimentID = crewReport
        emissiveName = indicator1
		dataColor = crewController1
		emptyColor = availability1
	}

	MODULE {
		name = ModuleScienceDataIndicator
        experimentID = crewReport
        emissiveName = indicator2
		dataColor = crewController2
		emptyColor = availability2
	}


	//-------------------------------------------------------------------------
	// TWEAKS
	//-------------------------------------------------------------------------

	// This pod uses a ModuleColorChanger to handle its cabin lights, set up
	// so that by default it takes control of *all* emissives on the part.
	// Need to tell it not to tinker with the meshes that we're adding here;
	// otherwise, the crew indicator will just turn on and off with the cabin
	// lights instead of actually working as a crew indicator.
	@MODULE[ModuleColorChanger] {
	    excludedRenderer = IndicatorLights/Meshes/nubbinLamp(Clone)

		// As long as we're tinkering here anyay... let's fix a 1.2 bug. :-)
		// ModuleColorChanger breaks the thermal overlay for the crewed parts
		// that use it for cabin lights. We can fix this by telling it
		// to ignore various meshes *other* than the window. Can remove this
		// hack once Squad gets around to fixing ModuleColorChanger. In the
		// meantime, this makes it better, and I can enjoy waiting to see whether
		// anyone actually notices!
		excludedRenderer = OuterShell
		excludedRenderer = flagTransform
		excludedRenderer = rung
		// ...Can remove the hack once Squad fixes ModuleColorChanger so it doesn't
		// break the thermal overlay.
	}
}