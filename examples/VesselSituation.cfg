// Demonstrate the use of situation() syntax.
//
// This example adds lights to the HECS2 probe core, which light up in
// various vessel situations (see comments below).

@PART[HECS2_ProbeCore] {

	//-------------------------------------------------------------------------
	// INDICATOR MESHES
	//-------------------------------------------------------------------------

	MODEL
	{
		model = IndicatorLights/Meshes/nubbinLamp
		scale = 1.5, 1.5, 0.6
		position = -0.1, 0.02, -0.73
		rotation = 0, 180, 0
	}

	MODEL
	{
		model = IndicatorLights/Meshes/nubbinLamp
		scale = 1.5, 1.5, 0.6
		position = 0, 0.02, -0.73
		rotation = 0, 180, 0
	}

	MODEL
	{
		model = IndicatorLights/Meshes/nubbinLamp
		scale = 1.5, 1.5, 0.6
		position = 0.1, 0.02, -0.73
		rotation = 0, 180, 0
	}


	//-------------------------------------------------------------------------
	// CONTROLLABLE EMISSIVES
	//-------------------------------------------------------------------------

	// This emissive shows status when we're on the surface.
	MODULE {
		name = ModuleControllableEmissive
		target = IndicatorLights/Meshes/nubbinLamp:0
		emissiveName = surface
	}

	// This emissive shows status when we're flying (not on the surface,
	// but not in space).
	MODULE {
		name = ModuleControllableEmissive
		target = IndicatorLights/Meshes/nubbinLamp:1
		emissiveName = airborne
	}

	// This emissive shows status when we're in space.
	MODULE {
		name = ModuleControllableEmissive
		target = IndicatorLights/Meshes/nubbinLamp:2
		emissiveName = space
	}


	//-------------------------------------------------------------------------
	// CONTROLLERS
	//-------------------------------------------------------------------------

	// This controls the surface indicator.  Green when on dry land, blue
	// when splashed.
	MODULE {
		name = ModuleBooleanIndicator
		input = situation(LANDED, SPLASHED)
		emissiveName = surface
		activeColor = if(situation(LANDED), $ToggleLED, #0040FF)
	}

	// This controls the indicator for when we're flying.
	MODULE {
		name = ModuleBooleanIndicator
		input = situation(FLYING)
		emissiveName = airborne
	}

	// Rapid blinking for suborbital. Pulsating for escape. Solid for orbit.
	MODULE {
		name = ModuleBooleanIndicator
		input = situation(SUB_ORBITAL, ORBITING, ESCAPING)
		emissiveName = space
		activeColor = if(situation(ORBITING), $ToggleLED, if(situation(SUB_ORBITAL), blink($ToggleLED, 200, $Off, 200), pulsate($ToggleLED, 1000, 0.5)))
	}
}
